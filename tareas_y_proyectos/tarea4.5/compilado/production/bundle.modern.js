(()=>{"use strict";class e{#e;#r;#o;#a;#t;#s;constructor(e,r,o,a,t,s){let i=/^[0-9]{5}$/.test(a)?a:"Error";this.#e=e,this.#r=r,this.#o=o,this.#a=i,this.#t=t,this.#s=s}get calle(){return this.#e}get numero(){return this.#r}get piso(){return this.#o}get codigo_postal(){return this.#a}get provincia(){return this.#t}get localidad(){return this.#s}toString(){return this.#e+" "+this.#r+" "+this.#o+"  "+this.#a+" "+this.#s+" "+this.#t+" "}}class r{#i;#n;#l;#c;#g;#u;static numeros=[];constructor(e,o,a){let t=/^[a-zA-ZáéíóúüÁÉÍÓÚÜ ]+$/;try{if(!t.test(e))throw new Error("Error solo pueden mostrase espacios o letras");this.#n=e}catch(e){console.log(`Error: ${e.message}`)}let s=0;for(;r.numeros.includes(s);)s++;r.numeros.push(s),this.#i=s,this.#l=o,this.#c=a,this.#g=[],this.#u=[]}get id(){return this.#i}get nombre(){return this.#n}get edad(){return this.#l}get direccion(){return this.#c}get asignaturas(){return[...this.#g]}toString(){return`${this.#i}: ${this.#n},  ${this.#l}, ${this.#c}`}matricular(e){try{if(this.#g.find((r=>r.nombre.toLowerCase()===e.nombre.toLowerCase())))throw new Error(`El estudiante ya está matriculado en ${e.nombre}`);{const r={nombre:e.nombre,nota:e.nota};return this.#g.push(r),this.#u.push({nombre:e.nombre,tipo:"Matrícula",fecha:new Date}),!0}}catch(e){return console.log(`Error: ${e.message}`),!1}}desmatricular(e){const r=this.#g.findIndex((r=>r.nombre.toLowerCase()===e.nombre.toLowerCase()));try{if(-1!==r){let o=e.nombre;return this.#g.splice(r,1),this.#u.push({nombre:o,tipo:"Desmatriculación",fecha:new Date}),!0}throw new Error(`El estudiante no está matriculado en ${e.nombre.toLowerCase()}`)}catch(e){return console.log(`Error: ${e.message}`),!1}}get registros(){let e=[];return this.#u.forEach((r=>{const o=r.fecha.toLocaleDateString("es-ES");e.push(`${r.nombre} - ${r.tipo}: ${o}`)})),e}agregar_calificacion(e,r){try{if("number"!=typeof r||r<0||r>10)throw new Error("La nota debe ser un número entre 0 y 10.");{const o=this.#g.find((r=>r.nombre.toLowerCase()===e.nombre.toLowerCase()));if(o)return o.nota=r,!0;throw new Error(`El estudiante no está matriculado en la asignatura ${e.nombre.toLowerCase()}`)}}catch(e){return console.log(`Error: ${e.message}`),!1}}asig_mostrar(){console.log(this.#g)}promedio(){if(0===this.#g.length)return 0;let e=this.#g.reduce(((e,r)=>(null==r.nota&&(r.nota=0),e+r.nota)),0);return Number(e/this.#g.length).toFixed(2)}}class o{nombre;#d;constructor(e){let r=/^[a-zA-ZáéíóúüÁÉÍÓÚÜ ]+$/;try{if(!r.test(e))throw new Error("Error solo pueden mostrase espacios o letras");this.nombre=e}catch(e){console.log(`Error: ${e.message}`)}this.#d=[]}get nombre_A(){return this.nombre}get calificaciones(){return[...this.#d]}toString(){return`Asignatura: ${this.nombre}`}agregar_calificacion(e){try{if(e>=0&&e<=10)return this.#d.push(e),!0;throw new Error("La nota "+e+" no es valida")}catch(e){return console.log(`Error: ${e.message}`),!1}}eliminar_calificacion(e){try{if(e<0||e>=this.#d.length)throw new Error("Índice fuera de rango.");return this.#d.splice(e,1),!0}catch(e){return console.log(`Error: ${e.message}`),!1}}calcular_promedio(){if(0===this.#d.length)return 0;let e=this.#d.reduce(((e,r)=>e+r),0)/this.#d.length;return Number(e.toFixed(2))}}class a{_gestor;constructor(){this._gestor=[]}get gestor(){return[...this._gestor]}toString(){return`Lista con ${this._gestor.length} elementos.`}}class t extends Error{constructor(e){super(e),this.name="ErrorPersonalizado"}}try{!function(e){if("string"!=typeof e.nombre||""===e.nombre.trim())throw new t("El nombre es obligatorio.");if("number"!=typeof e.edad||e.edad<=0)throw new t("La edad debe ser un número positivo.");console.log("Estudiante validado con éxito:")}(new r("Estudiante ZERO",-5,new e("Calle pex",10,"12ºA",29345,"Malaga","Malaga")))}catch(e){e instanceof t?console.log(`Error de validación: ${e.message}`):console.log(`Ocurrió un error inesperado: ${e.message}`)}const s=new class extends a{constructor(...e){super();for(let r of e)this.agregar_estudiante(r)}agregar_estudiante(e){try{if(this._gestor.find((r=>r.id===e.id)))throw new Error("Ya existe el estudiante.");return this._gestor.push(e),!0}catch(e){return console.log(`Error: ${e.message}`),!1}}eliminar_estudiante(e){let r=this._gestor.findIndex((r=>r.id===e));try{if(-1===r)throw new Error(`No se encontró ningún estudiante con ID ${e}.`);return this._gestor.splice(r,1),!0}catch(e){return console.log(`Error: ${e.message}`),!1}}listar_estudiantes(){for(let e of this._gestor)console.log(e.toString())}listar_informes(){for(let e of this._gestor)console.log(e.toString()),console.log("Direccion:"),console.log("Calle: "+e.direccion.calle),console.log("Número: "+e.direccion.numero),console.log("Piso: "+e.direccion.piso),console.log("Código Postal: "+e.direccion.codigo_postal),console.log("Provincia: "+e.direccion.provincia),console.log("Localidad: "+e.direccion.localidad),console.log("Asignaturas y calificaciones"),console.log(e.asignaturas),console.log("Fechas de matriculacion y desmatriculacion"),console.log(e.registros),console.log("Promedio del estudiante"),console.log(e.promedio())}obtener_estudiante(e){let r=this._gestor.find((r=>r.id===e));try{if(r)return r;throw new Error(`No se encontró ningún estudiante con ID ${e}.`)}catch(e){return console.log(`Error: ${e.message}`),!1}}obtener_nombre_estudiante(e){let r=this._gestor.filter((r=>r.nombre.toLowerCase().includes(e.toLowerCase())));try{if(r.length>0)return r.forEach((e=>{console.log("El estudiante encontrado es "+e.toString())}));throw new Error(`No se encontro ningún estudiante con el nombre ${e}`)}catch(e){return console.log(`Error: ${e.message}`),!1}}promedio_listas(){try{if(0===this._gestor.length)throw new Error("No hay estudiantes en la lista para calcular el promedio.");let e=(this._gestor.reduce(((e,r)=>e+Number(r.promedio())),0)/this._gestor.length).toFixed(2);return Number(e)}catch(e){return console.log(`Error: ${e.message}`),0}}toString(){return super.toString(),`Lista con ${this._gestor.length} estudiantes.`}},i=new class extends a{constructor(...e){super();for(let r of e)this.agregar_asignatura(r)}agregar_asignatura(e){try{if(this._gestor.find((r=>r.nombre.toLowerCase()===e.nombre.toLowerCase())))throw new Error("Ya existe la asignatura");return this._gestor.push(e),!0}catch(e){return console.log(`Error: ${e.message}`),!1}}eliminar_asignatura(e,r){let o=this._gestor.findIndex((r=>r.nombre.toLowerCase()===e.toLowerCase()));try{if(-1===o)throw new Error(`No se encontró ningúna asignatura con nombre ${e}.`);return this._gestor.splice(o,1),r.gestor.forEach((r=>{let o={nombre:e};r.desmatricular(o)})),console.log(`La asignatura ${e} ha sido eliminada de la lista y de todos los estudiantes.`),!0}catch(e){return console.log(`Error: ${e.message}`),!1}}listar_asignaturas(){for(let e of this._gestor)console.log(e.toString())}obtener_asignatura(e){let r=this._gestor.find((r=>r.nombre.toLowerCase()===e.toLowerCase()));try{if(r)return r;throw new Error(`No se encontró ningúna asignatura con nombre ${e}.`)}catch(e){return console.log(`Error: ${e.message}`),!1}}obtener_muchas_asignaturas(e){let r=this._gestor.filter((r=>r.nombre.toLowerCase().includes(e.toLowerCase())));try{if(r.length>0)return r.forEach((e=>{console.log("La asignatura encontrada es "+e.toString())}));throw new Error(`No se encontró ninguna asignatura con el nombre ${e}`)}catch(e){return console.log(`Error: ${e.message}`),!1}}toString(){return super.toString(),`Lista con ${this._gestor.length} Asignaturas`}};let n=[];n.push(new e("Calle pez",5,"6ºA",29005,"Malaga","Malaga")),n.push(new e("Calle Dolores",10,"7ºC",18210,"Granada","Peligros")),n.push(new e("Calle Sierpes ",20,"10ºB",41004,"Sevilla","Sevilla")),n.push(new e("Calle Cabezas",1,"4ºD",14003,"Cordoba","Cordoba")),n.push(new e("Calle Aleatoria",23,"8ºA",32123,"Aleatoria","Aleatoria"));let l=new r("Estudiante A",10,n[0]),c=new r("Estudiante B",12,n[1]),g=new r("Estudiante C",20,n[2]),u=new r("Estudiante D",19,n[3]),d=new r("Estudiante E",16,n[4]);s.agregar_estudiante(l),s.agregar_estudiante(c),s.agregar_estudiante(g),s.agregar_estudiante(u),s.agregar_estudiante(d);let m=new o("Matematicas"),h=new o("Fisica"),p=new o("Lengua"),b=new o("Biologia"),f=new o("Dibujo");i.agregar_asignatura(m),i.agregar_asignatura(h),i.agregar_asignatura(p),i.agregar_asignatura(b),i.agregar_asignatura(f);for(let e=0;e<s.gestor.length;e++)s.gestor[e].matricular(i.gestor[0]),s.gestor[e].matricular(i.gestor[1]),s.gestor[e].matricular(i.gestor[2]),s.gestor[e].matricular(i.gestor[3]),s.gestor[e].matricular(i.gestor[4]);s.gestor[0].desmatricular(i.gestor[0]),s.gestor[1].desmatricular(i.gestor[0]),s.gestor[2].desmatricular(i.gestor[0]),s.gestor[3].desmatricular(i.gestor[0]),s.gestor[0].agregar_calificacion(i.gestor[1],10),s.gestor[1].agregar_calificacion(i.gestor[1],10),s.gestor[2].agregar_calificacion(i.gestor[1],10),s.gestor[3].agregar_calificacion(i.gestor[1],10),s.gestor[4].agregar_calificacion(i.gestor[1],10);let _=0;do{switch(console.log("Opciones"),console.log("1 - Crear estudiante"),console.log("2 - Crear Asignatura"),console.log("3 - Matricular estudiante"),console.log("4 - Desmatricular estudiante"),console.log("5 - Eliminar estudiante de la lista"),console.log("6 - Eliminar asignatura de la lista"),console.log("7 - Calificar asignaturas y estudiantes"),console.log("8 - Promedio de un estudiante"),console.log("9 - Promedio de todos los estudiantes"),console.log("10 - Fechas de matriculacion"),console.log("11 - Buscar"),console.log("12 - Mostrar reporte"),console.log("13 - Salir"),_=prompt("Dime la opción que desees realizar"),_=Number(_),_){case 1:let a=/^[a-zA-ZáéíóúüÁÉÍÓÚÜ ]+$/,t=prompt("Introduce el nombre del estudiante:"),n=prompt("Introduce la edad del estudiante:");n=Number(n),console.log("Introduce la dirección del estudiante:");let l=prompt("Calle:"),c=parseInt(prompt("Número:")),g=prompt("Piso:"),u=prompt("Código postal (5 dígitos):"),d=prompt("Provincia:"),m=prompt("Localidad:");try{if(""===t||!a.test(t)||"number"!=typeof n||n<=0)throw new Error("El nombre o la edad no se han introducido correctamente. Vuelve a intentarlo");if(""===l||""===c||""===g||""===u||""===d||""===m)throw new Error("Los datos no se han introducido correctamente, vuelve a intentarlo")}catch(e){console.log(`Error: ${e.message}`);break}let h=new e(l,c,g,u,d,m),p=new r(t,n,h);0!=s.agregar_estudiante(p)&&(console.log("Estudiante creado y agregado con éxito:"),s.listar_estudiantes());break;case 2:let b=/^[a-zA-ZáéíóúüÁÉÍÓÚÜ ]+$/,f=prompt("Introduce el nombre de la asignatura:");try{if(!b.test(f)||"string"!=typeof f||""===f.trim())throw new Error("Error: La asignatura no es valida")}catch(e){console.log(e.message);break}let _=new o(f.trim());0!=i.agregar_asignatura(_)&&(console.log(`Asignatura ${f} creada y agregada con éxito.`),i.listar_asignaturas());break;case 3:s.listar_estudiantes();let w=prompt("Dime el id del estudiante que quieras matricular");w=Number(w);let E=s.obtener_estudiante(w);if(0!=E){let e=prompt("Ahora dime el nombre de la asignatura"),r=i.obtener_asignatura(e);0!=r&&1==E.matricular(r)&&console.log(`${E.nombre} ha sido matriculado en ${r.nombre} con éxito.`),E.asignaturas.forEach(((e,r)=>{console.log(`${r}. ${e.nombre}`)}))}break;case 4:s.listar_estudiantes();let $=prompt("Dime la id del estudiante que quieras desmatricular");$=Number($);let y=s.obtener_estudiante($);if(0!=y){y.asignaturas.forEach(((e,r)=>{console.log(`${r}. ${e.nombre}`)}));let e=prompt("Ahora dime la asignatura de la cual quieres desmatricular al estudiante"),r=i.obtener_asignatura(e);0!=r&&1==y.desmatricular(r)&&console.log(`${y.nombre} ha sido desmatriculado en ${r.nombre} con éxito.`),y.asignaturas.forEach(((e,r)=>{console.log(`${r}. ${e.nombre}`)}))}break;case 5:s.listar_estudiantes();let C=prompt("Dime el id del estudiante que quieras eliminar");C=Number(C);try{if(isNaN(C)||C<=0)throw new Error("El ID debe ser un número positivo.")}catch(e){console.log(`Error: ${e.message}`);break}0!=s.eliminar_estudiante(C)&&(console.log(`El estudiante con ID ${C} ha sido eliminado correctamente.`),s.listar_estudiantes());break;case 6:i.listar_asignaturas();let L=prompt("Dime el nombre de la asignatura que quieres eliminar");try{"string"==typeof L&&""!==L.trim()||console.log("La asignatura no es valida")}catch(e){console.log(`Error: ${e.message}`);break}0!=i.eliminar_asignatura(L,s)&&(console.log("La asignatura ha sido eliminada correctamente."),i.listar_asignaturas());break;case 7:let N=prompt("Introduce el nombre de la asignatura que desees calificar"),A=i.obtener_asignatura(N);if(0!=A){let e="",r=0,o=null;do{r=prompt("Introduce la nota de la asignatura a calificar"),r=Number(r),o=A.agregar_calificacion(r),e=1==o?prompt("Quieres seguir agregando calificaciones a la asignatura? si/no"):"no"}while("no"!=e.toLowerCase());if(1==o){console.log("calculamos el promedio de las calificaciones de la asignatura elegida");let e=A.calcular_promedio();s.listar_estudiantes();let r=prompt("Ahora, introduce el ID del estudiante que deseas calificar con el promedio de esas calificaciones:");r=Number(r);let o=s.obtener_estudiante(r);0!=o&&(console.log(`Asignaturas en las que está matriculado ${o.nombre}`),o.asignaturas.forEach(((e,r)=>{console.log(`${r}. ${e.nombre}`)})),console.log(`El promedio ${e} de la asignatura ${A.nombre} será asignado al estudiante ${o.nombre}`),o.agregar_calificacion(A,e))}for(let e=0;e<A.calificaciones.length;e++)A.eliminar_calificacion(e);console.log("Operación terminada")}break;case 8:s.listar_estudiantes();let D=prompt("Introduce el ID del estudiante del cual deseas hacer su promedio: ");D=Number(D);let v=s.obtener_estudiante(D);if(0!=v){console.log("Ahora calcularemos el promedio de todas las notas del estudiante elegido");let e=v.promedio();console.log(v.asignaturas),console.log(`El promedio de notas del estudiante ${v.nombre} es ${e}`)}break;case 9:s.gestor.forEach((e=>{console.log(`Estudiante: ${e.nombre}, Promedio: ${e.promedio()}, Asignaturas: ${e.asig_mostrar()}`)})),console.log("Ahora se calculará el promedio de notas de todos los estudiantes");let q=s.promedio_listas();console.log(`El promedio de todos los estudiantes será ${q}`);break;case 10:s.listar_estudiantes();let S=prompt("Dime el ID del estudiante del que quieras saber su fecha de matriculacion y fecha de desmatriculacion de sus asignaturas hasta el momento");S=Number(S);try{if(isNaN(S)||S<=0)throw new Error("El ID debe ser un número positivo.")}catch(e){console.log(`Error: ${e.message}`);break}let I=s.obtener_estudiante(S);0!=I&&(console.log("Las asignaturas de las que se ha matriculado y desmatriculado hasta el momento son: "),console.log(I.registros));break;case 11:let k=prompt("Si quieres buscar un estudiante marca 1 y si quieres buscar una asignatura marca 2: ");if(k=Number(k),1==k){s.listar_estudiantes();let e=prompt("Dime el nombre del estudiante al que estas buscando");s.obtener_nombre_estudiante(e)}else if(2==k){i.listar_asignaturas();let e=prompt("Dime el nombre de la asignatura que estas buscando");i.obtener_muchas_asignaturas(e)}break;case 12:console.log("A continuación se mostrarán los informes de cada uno de los estudiantes: "),s.listar_informes();break;case 13:console.log("Adios");break;default:console.log("No se ha seleccionado la opcion correcta, vuelve a intentarlo")}}while(13!=_)})();